apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../doit/docker-compose.yml
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f ../doit/docker-compose.yml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: postgres
    spec:
      containers:
        - env:
            - name: DATABASE_URL
              valueFrom:
                configMapKeyRef:
                  key: DATABASE_URL
                  name: env
            - name: DATABASE_URL_OLD
              valueFrom:
                configMapKeyRef:
                  key: DATABASE_URL_OLD
                  name: env
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: PGDATABASE
              valueFrom:
                configMapKeyRef:
                  key: PGDATABASE
                  name: env
            - name: PGHOST
              valueFrom:
                configMapKeyRef:
                  key: PGHOST
                  name: env
            - name: PGPASSWORD
              valueFrom:
                configMapKeyRef:
                  key: PGPASSWORD
                  name: env
            - name: PGPORT
              valueFrom:
                configMapKeyRef:
                  key: PGPORT
                  name: env
            - name: PGUSER
              valueFrom:
                configMapKeyRef:
                  key: PGUSER
                  name: env
            - name: PHX_HOST
              valueFrom:
                configMapKeyRef:
                  key: PHX_HOST
                  name: env
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  key: PORT
                  name: env
            - name: POSTGRES_HOST_AUTH_METHOD
              value: trust
            - name: POSTGRES_INITDB_ARGS
              value: --encoding=UTF-8
            - name: POSTGRES_PASSWORD
            - name: POSTGRES_USER
            - name: SECRET_KEY_BASE
              valueFrom:
                configMapKeyRef:
                  key: SECRET_KEY_BASE
                  name: env
          image: postgres
          name: postgres
          ports:
            - containerPort: 5432
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: pgdata
      restartPolicy: Always
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: pgdata
status: {}
